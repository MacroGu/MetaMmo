/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class Monster : public MonsterBase)
	tools = kbcmd
*/

#pragma once
#include "KBECommon.h"
#include "Entity.h"
#include "KBETypes.h"
#include "EntityCallMonsterBase.h"

namespace KBEngine
{

class Method;
class Property;
class MemoryStream;

// defined in */scripts/entity_defs/Monster.def
	// Please inherit and implement "class Monster : public MonsterBase"
class KBENGINEPLUGINS_API MonsterBase : public Entity
{
public:
	EntityBaseEntityCall_MonsterBase* pBaseEntityCall;
	EntityCellEntityCall_MonsterBase* pCellEntityCall;

	int32 BaseHP;
	virtual void onBaseHPChanged(int32 oldValue) {}
	int32 HP;
	virtual void onHPChanged(int32 oldValue) {}
	uint32 MonsterID;
	virtual void onMonsterIDChanged(uint32 oldValue) {}
	int32 enage;
	virtual void onEnageChanged(int32 oldValue) {}

	virtual void OnAnimUpdate(const ANIM_INFO& arg1) = 0; 
	virtual void OnAttack(const SKILL_INFO& arg1) = 0; 

	void onComponentsEnterworld() override;
	void onComponentsLeaveworld() override;

	void onGetBase() override;
	void onGetCell() override;
	void onLoseCell() override;

	EntityCall* getBaseEntityCall() override;
	EntityCall* getCellEntityCall() override;


	void onRemoteMethodCall(MemoryStream& stream) override;
	void onUpdatePropertys(MemoryStream& stream) override;
	void callPropertysSetMethods() override;

	MonsterBase();
	virtual ~MonsterBase();

	void attachComponents() override;
	void detachComponents() override;

};

}